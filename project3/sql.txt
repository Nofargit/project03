import React, {useState, useEffect} from 'react'

import Card from 'react-bootstrap/Card'
import Button from 'react-bootstrap/Button'

 function CardVacation(props){

  //  const handleFollowers=
  //  {
  //    isChecked: true
  //   }
  //   const HandleNotFollowers= 
  //   {
  //     isChecked: false
  //   }
    const [isChecked , setFollowers] = useState(false)
    // let buttonOnChange = 'Follow';

    
 
      const [follow , setButton] = useState('Follow')
        // if(HandleNotFollowers)
        // {
        //   console.log('im false')
        //   console.log(HandleNotFollowers)
        //   buttonOnChange= <button id="follow-button" onChange={handleFollowers} >+ Follow</button>
        
        //   // console.log(handleFollowers)
        // }
    
      // else{
          // console.log('im true')
        //   buttonOnChange= <button id="follow-button" onClick={()=>setFollowers(handleFollowers)} >+ Following</button>
        // }
        

  // const followButton =()=>
  // {
  //         if(isChecked ===false)
  //         {
  //           setFollowers(true)
  //           console.log(document.getElementById('follow-button') )
  //         //  let button= document.getElementById('follow-button')
  //         //  button= 'fallawing'
  //         }
  //         else{            
  //           setFollowers(false)
  //           console.log(isChecked)

  //         }
  // }


  const followButton =()=>
  {
          if(isChecked ===false)
          {
            setFollowers(true)
            setButton('Following')
            
          }
          else{            
            setFollowers(false)
            console.log(isChecked)
            setButton('Follow')
          }
  }




    

    return(
        <>


<div className='cardDiv'>

  <button id="follow-button" onClick={followButton} > > {follow} </button>
  {/* {buttonOnChange} */}


  <p>vacation to: {props.Destination}</p>
  <div>
  Description: {props.Description}
  <br/>
  Dates: {props.Dates}
  <br/> 
  Price: {props.Price}
  </div>

      
 </div>

        
</>
    )
    
}


export default CardVacation;




JOIN vacation + users for follow

SELECT users.FirstName FROM `users` INNER JOIN vacations ON users.follow = vacations.follow







>>>>>>>>CardVacation <<<<<<<<<

import React, {useState, useEffect} from 'react';
import FollowersHandle from './FollowersHandle';


 function CardVacation(props){

  // const Destination = props.Destination

  const 
  

    const [isChecked , setFollowers] = useState(false)

    
 
      const [follow , setButton] = useState('Follow')
      // console.log('>>currentUserName' , props.currentUserName)



  const followButton =()=>
  {
          if(isChecked === false)
          {
            console.log(isChecked)
            setFollowers(true)
            console.log('isChecked>>>>>>>>>>' , isChecked)
            setButton('Following')
            
          }
          else{            
            setFollowers(false)
            setButton('Follow')
          }
  }





    return(
        <>


<div className='cardDiv'>

  <button id="follow-button" onClick={followButton} >  <FollowersHandle  currentUserName={props.currentUserName} isChecked={isChecked}  Destination={ props.Destination} /> {follow} </button>


  <p>vacation to: {props.Destination}</p>
  <div>
  Description: {props.Description}
  <br/>
  Dates: {props.Dates}
  <br/> 
  Price: {props.Price}
  </div>

      
 </div>

        
</>
    )
    
}


export default CardVacation;














CardVacation
// import React, {useState, useEffect} from 'react';
// import FollowersHandle from './FollowersHandle';


//  function CardVacation(props){

//   const Destination = props.Destination


  

//     const [isChecked , setFollowers] = useState(false)

    
 
//       const [follow , setButton] = useState('Follow')
//       // console.log('>>currentUserName' , props.currentUserName)

 
//   // let arryForFollowingVacation = [];

//   const followButton =()=>
//   {
//           if(isChecked === false)
//           {
//             console.log(isChecked)
//             setFollowers(true)
//             console.log('isChecked>>>>>>>>>>' , isChecked)
//             setButton('Following')
//             // arryForFollowingVacation.push(Destination)
//             // console.log("arryForFollowingVacation" , arryForFollowingVacation)
            
//           }
//           else{            
//             setFollowers(false)
//             setButton('Follow')
//           }
//   }





//     return(
//         <>


// <div className='cardDiv'>

//   <button id="follow-button" onClick={followButton} >  <FollowersHandle  currentUserName={props.currentUserName} isChecked={isChecked}  Destination={ props.Destination} /> {follow} </button>


//   <p>vacation to: {props.Destination}</p>
//   <div>
//   Description: {props.Description}
//   <br/>
//   Dates: {props.Dates}
//   <br/> 
//   Price: {props.Price}
//   </div>

      
//  </div>

        
// </>
//     )
    
// }


// export default CardVacation;


////////////////////////////////////////////////////////////////////////////////////////////////




import React, {useState, useEffect} from 'react';
import FollowersHandle from './FollowersHandle';


 function CardVacation(props){


   const details= {
    currentUserName:props.currentUserName,
    Destination:props.Destination,
    VacationId: props.VacationId,
   }
  const [{button, follow} , setButton] = useState({button:'♥' ,follow: false })
  
  const followButton =()=>
  {
    if(follow === false)
    {
      // setButton({button: '♥' , follow:true})
      // document.getElementById('btn-light').style.color='red'

      const options = {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },        
        body: JSON.stringify(details)
    }
    console.log("details", details)
    fetch(`/api/CardVacationIfFollow`, options)
        .then(res=>res.json())
        .then((data)=>
        {
          setButton({button: '♥' , follow:true})
          document.getElementById('btn-light').style.color='red'
                console.log('this is data in fetch' , data.message)
        })
        .catch(err => console.log({state: 'error', message: err.message}))

      
    }else{
   
      const options ={
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json'
      },        
      body: JSON.stringify(details)

    }
       
      fetch(`/api/CardVacationIfNotFollow`, options)
      .then(res=>res.json())
      .then((data)=>
      {
              console.log('this is data in fetch' , data.message)
              setButton({button: '♥', follow:false})
              document.getElementById('btn-light').style.color='black';
      })
      .catch(err => console.log({state: 'error', message: err.message}))


      // setButton({button: '♥', follow:false})
      // document.getElementById('btn-light').style.color='black';



    }


    // if(isChecked === false)
    // {
    //   console.log(isChecked, '<<<<<<<')
    //   setFollowers(true)
    //   console.log('isChecked>>>>>>>>>>' , isChecked)
    //   setButton(follow)
    //   document.getElementById('btn-light').style.color='red'
    //   // arryForFollowingVacation.push(Destination)
    //   // console.log("arryForFollowingVacation" , arryForFollowingVacation)
      
    // }
    // else{            
    //   setFollowers(false)
    //   setButton(follow)
    //   console.log('isChecked>>>>>>>>>>' , isChecked)

    //   document.getElementById('btn-light').style.color='black'

    // }

     
  }




    return(
        <>


<div className='cardDiv'>

 
  <button type="button"  className="btn btn-light" id='btn-light' style={{color: }} onClick={followButton}  > {button} </button>


  <p>vacation to: {props.Destination}</p>
  <div>
  Description: {props.Description}
  <br/>
  Dates: {props.Dates}
  <br/> 
  Price: {props.Price}
  </div>

      
 </div>

        
</>
    )
    
}


export default CardVacation;


SELECT * FROM vacations v JOIN follower f ON v.`VacationId` = f.`VacationId`


SELECT * FROM vacations v LEFT JOIN follower f ON v.VacationId = f.VacationId <<<<<<
